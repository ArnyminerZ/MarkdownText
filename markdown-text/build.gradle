plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin)
}

ext {
    PUBLISH_GROUP_ID = 'com.arnyminerz.markdowntext'
    PUBLISH_ARTIFACT_ID = 'markdowntext'
    PUBLISH_DESCRIPTION = 'A Jetpack Compose component used for displaying Markdown-formatted text.'
    PUBLISH_URL = 'https://github.com/ArnyminerZ/MarkdownText'
    PUBLISH_LICENSE_NAME = 'Apache License'
    PUBLISH_LICENSE_URL = 'https://github.com/ArnyminerZ/MarkdownText/blob/master/LICENSE'
    PUBLISH_DEVELOPER_ID = 'ArnyminerZ'
    PUBLISH_DEVELOPER_NAME = 'Arnau Mora'
    PUBLISH_DEVELOPER_EMAIL = 'arnyminer.z@gmail.com'
    PUBLISH_SCM_CONNECTION = 'scm:git:github.com/ArnyminerZ/MarkdownText.git'
    PUBLISH_SCM_DEVELOPER_CONNECTION = 'scm:git:ssh://github.com/ArnyminerZ/MarkdownText.git'
    PUBLISH_SCM_URL = 'https://github.com/ArnyminerZ/MarkdownText/tree/master'
}

apply from: './version.gradle'
apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"

android {
    namespace 'com.arnyminerz.markdowntext'
    compileSdk 34

    defaultConfig {
        minSdk 21
        targetSdk 34

        versionName PUBLISH_VERSION

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }
}

dependencies {
    implementation(libs.androidx.core)
    implementation(libs.appcompat)

    // Jetpack Compose core
    implementation(libs.androidx.activityCompose)
    implementation(libs.compose.material3.core)
    implementation(libs.compose.ui.base)
    implementation(libs.compose.ui.toolingPreview)

    // Coil image loader
    implementation(libs.coil.base)
    implementation(libs.coil.compose)
    implementation(libs.coil.gif)
    implementation(libs.coil.svg)

    implementation(libs.jetbrains.markdown)

    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.test.junit)
    androidTestImplementation(libs.androidx.test.espresso)
}
